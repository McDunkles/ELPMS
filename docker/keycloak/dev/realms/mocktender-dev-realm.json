{
  "id" : "671ca567-88f9-4d9f-bfe8-80f7d1c59343",
  "realm" : "mocktender-dev",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "a5781d15-4321-4f03-b167-4a248c46788e",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "671ca567-88f9-4d9f-bfe8-80f7d1c59343",
      "attributes" : { }
    }, {
      "id" : "7a15be81-8081-400c-959e-0d674ace52dc",
      "name" : "default-roles-mocktender-dev",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "671ca567-88f9-4d9f-bfe8-80f7d1c59343",
      "attributes" : { }
    }, {
      "id" : "35de7d91-8234-4548-a51d-82bb8ca770ef",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "671ca567-88f9-4d9f-bfe8-80f7d1c59343",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "4f7905d1-b0eb-4732-9fda-a04651c257d1",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-users", "query-groups" ]
          }
        },
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "508a4be0-b448-4a23-9478-6b5912942888",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-users", "manage-identity-providers", "view-authorization", "view-clients", "query-clients", "impersonation", "manage-authorization", "manage-events", "view-identity-providers", "view-realm", "manage-clients", "view-events", "query-realms", "manage-users", "create-client", "query-users", "query-groups", "manage-realm" ]
          }
        },
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "08b0ad9f-e73a-4f2e-81f3-d80e265402e5",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "a3742bcf-e28d-4be8-8bb8-86484908f882",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "e8fd8af6-ac53-471a-b742-13a13b2dbf84",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "5d59fa78-86ad-4b3f-b764-c9ea926985da",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "b9956bad-dfc5-4e6f-a35f-17bbd1553234",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "e3741bd2-aaab-4740-b45f-5e58eccd861c",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "9d2bae69-2545-41a8-b84e-af4af5d46131",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "3cac4187-92d2-4ab1-8318-1d08cffcd3bc",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "4d4b4040-d2ca-4415-a4e3-6aeb67175865",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "56237b02-4f26-45ea-803f-7cba6cf0077e",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "aa11bf8f-d6e6-4dda-a61f-80c6a017fddf",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "003273d0-f98a-497a-bd6d-5d94fd50f25e",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "7f13503d-b837-4b54-b93d-6395e3928299",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "7a6a298f-611d-4eae-80dc-79ba7284712f",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "6ada889a-0a9d-4c1e-b435-51aa081ccd82",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "9616a584-cb20-4dad-8825-a9fd8f789b38",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      }, {
        "id" : "5d2fdf2a-2637-487a-a490-c95cb999ae0a",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "491f8896-4004-495a-a51a-8de835ae8c40",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "38cd28c1-ca83-420b-baaf-06700f9cd890",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "bb3ca28e-6776-4282-add2-d9e941d6348e",
        "attributes" : { }
      } ],
      "vue-demo" : [ {
        "id" : "efb14715-0b1b-4294-84bf-8e8017bfdaa9",
        "name" : "VueDemoUser",
        "description" : "Initial test of integrating Keycloak with the UI",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "7ddc78c2-0f89-4939-8fa7-eb424428e2ad",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "dba76312-13ae-4710-aa7d-22bcec40e75d",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "2c0f0465-fc99-469b-81c5-fd3af6b15ede",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "b1093a3a-ca6f-4845-90ce-1541eaaec93c",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "ef17d629-05f0-4f28-a165-60c14c0fc15d",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "d2fecaeb-ae81-4c60-afe6-b11f0d7bb546",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "bb199dc6-a3a9-4e9e-87d6-a469dfb73574",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "4682e23d-6aa6-4db5-b6b3-3a32bd6cfa4e",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      }, {
        "id" : "231756cc-6911-43be-9934-d4eef172e484",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "7a15be81-8081-400c-959e-0d674ace52dc",
    "name" : "default-roles-mocktender-dev",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "671ca567-88f9-4d9f-bfe8-80f7d1c59343"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName" ],
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "c529f442-e5a4-40e2-a4f3-b9ba113029be",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mocktender-dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mocktender-dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "fa6d9a4c-34e3-4ba7-8720-80e5d245712b",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/mocktender-dev/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/mocktender-dev/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "29125563-2c43-4db1-beb5-b19cb5e2a3fd",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1345163e-61ce-4346-a2ec-58bf719df8db",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "bb3ca28e-6776-4282-add2-d9e941d6348e",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "491f8896-4004-495a-a51a-8de835ae8c40",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1588c209-a5c3-4f9e-9595-b3261d34fa25",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/mocktender-dev/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/mocktender-dev/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "2c9eae61-cb30-43a8-a4d5-071bc9c0f26a",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7ddc78c2-0f89-4939-8fa7-eb424428e2ad",
    "clientId" : "vue-demo",
    "name" : "Demo",
    "description" : "",
    "rootUrl" : "http://localhost:5173",
    "adminUrl" : "",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "http://localhost:5173/*" ],
    "webOrigins" : [ "http://localhost:5173" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "oauth2.device.authorization.grant.enabled" : "false",
      "display.on.consent.screen" : "false",
      "backchannel.logout.session.required" : "true",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "02470e18-ecf1-410f-b72d-02c5d9c0c79c",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "31ceaedd-7f1a-4911-9bad-11bf36ca5ec8",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "5088cd5e-1e9f-4ff4-bbda-10b9104e4f99",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "d0f71f33-a0c9-4481-8b6f-bef03a626a00",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : { }
    } ]
  }, {
    "id" : "21a47f73-69e8-43c6-9d73-958fe97e1b85",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "605f45f1-ab4d-4982-b7c2-c5d678152b91",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "eaa5ba2e-e595-4ca6-b47c-0b7af85402e4",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "ab40c871-525e-4fdc-be35-37bbc9bcf8e8",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "5714dc21-356c-4fe8-b674-94c1cd4a4e52",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "f9145266-4e53-4a70-ac93-adf8f6980304",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5b8876a2-2a86-4d0d-a6d4-04c7aaf31535",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "50042a71-d2e0-457a-bf8d-9a054a278564",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "16a0028e-b401-487a-9073-f6417b14efd4",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "22a79588-618c-488e-b673-a0e656fb288c",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "7b5d0398-2942-45bb-8f13-9f22f57acd09",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6ddbfebe-d68f-4f76-a660-7d73dc1bd15b",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ec6f134-ea1c-46d9-b744-4c31f7915a60",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c0b1a051-9872-488f-865b-9e6643f10396",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "de491da2-1c83-48fc-8cfe-25267ca16ee9",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d4e06706-a814-4e79-af50-017cbefb6406",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5ff3149d-e513-4e46-a266-65612fc71f1c",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "be13b0e9-d49d-4fcf-ad13-cbd4c9218420",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    } ]
  }, {
    "id" : "bba90710-a1df-4ca4-97c2-c8a1e19792a3",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "42f845c5-bf74-44a8-b0ae-6411ab318bf2",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ddc87cf2-a52f-4024-b75b-1ad7ae2e8bef",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "937ae3e8-5e75-4062-9a34-4ab68f1af2e6",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "58b3c664-eebe-4e12-84b6-570f24bcc189",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "02018b54-0a08-425c-a9be-6c51947fc3e7",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "88989c38-1ac3-45cf-ad61-9558a2d3c053",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b94289aa-6734-4fa8-8c7c-035ccbee2805",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "f8c7079b-d343-4960-94cd-adbd188d270b",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "71b20b35-6453-4022-9d74-a3ee6c0755da",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "e7883fba-cd71-4c91-9efa-14e40b3f53de",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    }, {
      "id" : "be08a828-b45a-4556-a611-f3771a1589d4",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    } ]
  }, {
    "id" : "73da98d0-d1c5-4c2b-8cd1-3d977de561cc",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "fa1a44cf-a0e8-412d-a7ad-f9545d91bfc7",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c1628c18-cace-4e52-956b-f48bdcf9978c",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "d9625dd1-f7af-47c4-b19d-7c58b33860b2",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "aea93319-d51f-4714-ad75-2ccb8e0dba8a",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "7e5b286a-f887-48a9-b7a4-fe65c2dd7720",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-role-list-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper" ]
      }
    }, {
      "id" : "e15f7805-a942-4585-8d3e-914f3746afca",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "1dce2ae1-48a8-4228-9ab9-8302128e8d2a",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "a6ce67cc-4a35-4651-b9c2-7dc1370f63f8",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
      }
    }, {
      "id" : "ef395b6d-b810-4f88-867f-a86954015c3b",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "6a688f6c-bd18-4b18-9d34-b47b6361324a",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "98335ff5-46bc-4dab-8c6e-6c75d955858d",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEArRcMHoRajbPegq/YjMgFJc8/PKXrwV7kE1+EXaLN3YUtTynnJ5u6zBVQZVTNuT9734mN95XDK4LXlm+YaqxRQeFx6OywSWQrHss/TaObscW+8XRgW+BYWiJvyb1ciZw791COSCu7oDNDm0CrwYLhjVDwlLDoD0FzBEywrZQXwX5OnqjtsI309joC+xzRSEHtufDye13fHmib/aoGx2aTGzshL2VdNmf/W3slhEdTTY6hkbIyyg1CdatA/2Nz3xgXM+UtpX0rkCsoRqYv7aTA4drECiYKtWQ/goJnMrPhb/KOVaCR7BVw5z+HPyBGxT6CAv7Vl1wHquakyytfzdw6LwIDAQABAoIBACLstRHNQ9Y2tk1pPMj/LOa5n/lVQzIDuwJbsgIQsPgjAIbqHg2EYxb9r/iaOV5I/G4Yu6/6pGQ5pNViU/8mIMkpu4mzhEhysS6n9PBt9CLVExd2E2FGbZ1WOHccwbi0cPcQZn0Sceu7nEcNr/o+NdOFQt3FqjU10AbMkJOdf4OXayhcGPP8sh91FQAzQn3fB1tAhL/WhPX4g7D5t7cfT3hsoskCwWfhIwWued5E1C8l2PmA0K93jedOOxm5HKD/Qbr64UQRMYseMd7McsD/SzUIJOR35wcTxIUrT+GrhJFf2bgF4Im2bjyVgtOAtI41dLqPbrot/ncMjsIOuuAmsvECgYEA3WGMRYQmul36IFgloxZ6eycmSIH19IjlbhaRreUxvrTCQb4nFXrBXUYfkBLFacW/ZkWTsqm3bYM969/yRcUlBkMXkPVdU5wtV9zSsNozxW2FcA53CbnTOQ2D+JXMUu89k7mruX7mYJeM0KYPeljHoYHUG8wXrFQWRyJ+EgIY5PECgYEAyChJL/WLl/FxwZCs7GiOa3kEVfdyBqBdJ3dEUYyqgSPsAl0vouncdFI2253in5Zi9h6AqzIXzAFwEGNNeXJCisZf75YWMNOPSoX87zANwFV/HfBhs5f0z85ylAj9i15dZRa5AQz1S8iI/s74seIt7oLFRsvrw9mz8LEeMLXskR8CgYEAixSewImunwUtgCaAtr4Hgtlspr7nG5LpuMj7Cunj37DGHfFtsoPleUj1yVjRp4rxnTn2+ZbAQ0/hlg+isIyTnySFaK+Ny1ph7kIwJ6VeQxl0bJrZ1EVnWv+Pupu5uxzMbcOHDEmaSHLNp8O8E5w1BtV+wVvuP3iwak5UL9Ibe7ECgYB7CbijkI804aiJ0kNaN5OEoSl3JtqjFCTvQ7NtZcjSBaDoexvzS0rG/lrWeaF7dFh07p8tnWdfcmrOyBwx0XjyEaubfWk6rnHg36hx59osJuIzJzcHzRsiOsfYFAa3i1Rh9avX531KDoWYDOZ3go+1lBFsyaGuDL8978KdMtevBQKBgEgIWMzV0d1gGVWaGRN/7T4TLa/Ho/1iQWIK9EhN+gd1zx6JxndxCYYGp+2D0HtGRe2p2L7uPU5lC3E/np29rwWNKtszChPkjJqtwYaT9bWjqgBecfUJe7A1/XxGeqlVQuA2zT0huNjsKawylUpW//XcS5U3J5e69I2ckidzFbXS" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICqzCCAZMCBgGGQquHYjANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5tb2NrdGVuZGVyLWRldjAeFw0yMzAyMTEyMjQ4MDNaFw0zMzAyMTEyMjQ5NDNaMBkxFzAVBgNVBAMMDm1vY2t0ZW5kZXItZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArRcMHoRajbPegq/YjMgFJc8/PKXrwV7kE1+EXaLN3YUtTynnJ5u6zBVQZVTNuT9734mN95XDK4LXlm+YaqxRQeFx6OywSWQrHss/TaObscW+8XRgW+BYWiJvyb1ciZw791COSCu7oDNDm0CrwYLhjVDwlLDoD0FzBEywrZQXwX5OnqjtsI309joC+xzRSEHtufDye13fHmib/aoGx2aTGzshL2VdNmf/W3slhEdTTY6hkbIyyg1CdatA/2Nz3xgXM+UtpX0rkCsoRqYv7aTA4drECiYKtWQ/goJnMrPhb/KOVaCR7BVw5z+HPyBGxT6CAv7Vl1wHquakyytfzdw6LwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBVOmSBmDEqXCfSv/r20YZhggqfKd3rAYS3eOtuz0Mu9iKEIQLgXyGO7p7kTVVpqqdzBEbeOGRzumZS6j7YkpzOfOM/HVqlFIA5vnB7dxCYVTho0cOykcxWdr2JPu0CwyxoropWppiC+9KCaHg/yuW8xZA9Ih4kARxTvrclRL++7j1+df3OdGzHgp2j8hYjxmV188yYskxXM26T9qVJdpLHuln5nfgRHZDc1MP7yWP34S5FL9oLGwdKBZLBpIj0SZqMaUKFaLqg7GS9vqXhI1BHkr6uGk0iEEQ3ZOsDqwbf3BTAFC1LmXzf9vxI7itWTc/Ix5WBQtQwJk6vrZhgAg+i" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "2092fa03-a313-4441-86c5-8dc81927c5a8",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "120365f1-6370-4eb0-9d99-4cf49b601087" ],
        "secret" : [ "ni0jEi0wctLPQ3x1yG4CgQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "4094c3bd-3855-418c-9cc6-f978afc1a86f",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEA4973ZHwueXDL0GVCpd/o/TMOkRw2JJbWoi8oog6mdY/I0KBWUpUrsfAVP6+UFf1mnj8SfQOcG+L9MPpOrfORUeZuDs+nkTk82nqZo46nysnnTBpGqA3XCwAK/luJvlJAjbhazSUNG3ZSuKHbHwLsq5bLLcezmbtZqGTUnB4/zSLHWXL04XOUVznz2Hy07fJUXABWi0ayC/bcC+IA2jhluHbh9wMYmc14ynWv7qnpFRjoXpGoqLqw7KEU5UArqr5yicGvv70D/BFPjH6fXh7Ad9sahyOMofKUVt7I2BLHwoHOdbj8fCfAj05GQTS5udeTS6YN/TJzLTrV3f3Tggj2JQIDAQABAoIBADVsRvJdRdUNW49ESjuS0vAXugTNySjLX08fQMa7qg16VAGLcamDVP7u00B+1LhSFC6qCVbbU4xbK3KB4JPaPHnnzOo2h2nd8jUjlKUakx6RNuOp7mJEemPXEvy+r7y50m4XaFxboSbM1wh30+RBnoR9Ai39uY7jdFntJ8ZhNiKMoVAdUYzOuNEObGaB0o9mQT5ay7MRihghNozRodWy9cd64kOdsPk4MKnbpiWQf6v8js9Lad8BNWP3c9IHv8OjT/9X9eEv4Q0zWjBpxGilXSo0AujJAAe7DifwahOrt98/qfh5hHm/7tpmd4NfdabL2KbYTdp4Yu5pxWmDpzVXx0ECgYEA89JQwNb3wm0xTy178Kkmbz81E6tOdjCsKxct8tUCZStbhpopFBkuQz/lzLUj5eZLAQ1dMJi3/CEhlYkZwqa8x+jtqsNGJEwRUhNDMANjMZODp/o3aLL3ZUjEOsCu/aGNIIc3pbKGG7M/azC9oDjlgxl+UEghvR3Y1kt83YeS6cECgYEA70Cx4qF1G4QWFvzqZcCqWDmdFCqlkbTXFzUBYvnfPemSRj11OfdvxYd9uwq6KceLf5OluQ5p9ZnjB1KG4B9TcXF9R7NafbdqetjXQJQjt3QLUbKGWZRqhahWk/Ap5w/femhkilitHAvd+OdR8Juf9dnTMFrRf8BFQ6iyIBHP/WUCgYEAyN6z+KshYuRig0CNoy83ot8H8zRmZ6ihrr5h9HTYjFC0Dqhiv1QfcPfrckKpWHXpxOwloiuvJ+CDspZIyrxjOq8DXnOSDcU9X8jOyXeA+Q72oCTcET2f46mXQHANupalle7QQYpaQefij4SQNLerHd6a2bkTUqKMSb/XFwriVgECgYEAxkrbZBcnRTfzSvgxmUXWqSqPCsDR2vKD9oMC9DJemSS2DCsxtmpio9dJGLWqV6g/8OvBRaAxp9H0PQRkLusnsHU8PSnkTR+wS8LenHJrK8gs/Xg2K5Z7tu0vXIuHXy9jrENLWPJn/z/CqGGoIwAI0q3HgGM1EWmcvpfZkgTRWpUCgYAeX5IJgmHHxiiHorjkRRSYEGPeKGfHfizWMP9BE8uYWwmXtf8Vj9WHJl1wdE5pn2uv2TYs2Wx839C+ineFrGFHKMg5EkSSGkP4QUW3qXBP069FiKuYpymgmPuQ6XYWKbW/RaLB/XuNOKNhd+CtNO+OgF0l5dUIMCFK0MhrOIeaXQ==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICqzCCAZMCBgGGQquIzDANBgkqhkiG9w0BAQsFADAZMRcwFQYDVQQDDA5tb2NrdGVuZGVyLWRldjAeFw0yMzAyMTEyMjQ4MDNaFw0zMzAyMTEyMjQ5NDNaMBkxFzAVBgNVBAMMDm1vY2t0ZW5kZXItZGV2MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4973ZHwueXDL0GVCpd/o/TMOkRw2JJbWoi8oog6mdY/I0KBWUpUrsfAVP6+UFf1mnj8SfQOcG+L9MPpOrfORUeZuDs+nkTk82nqZo46nysnnTBpGqA3XCwAK/luJvlJAjbhazSUNG3ZSuKHbHwLsq5bLLcezmbtZqGTUnB4/zSLHWXL04XOUVznz2Hy07fJUXABWi0ayC/bcC+IA2jhluHbh9wMYmc14ynWv7qnpFRjoXpGoqLqw7KEU5UArqr5yicGvv70D/BFPjH6fXh7Ad9sahyOMofKUVt7I2BLHwoHOdbj8fCfAj05GQTS5udeTS6YN/TJzLTrV3f3Tggj2JQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQDdI7X6/6GoZpS9Xqglbd5UUekf60Qg3LaDNwP+gibZHDcOHYwstC8IOhcdCF2WbIGJ9W67ehFE1Rym2mWA3feSgHwyb5K+QFbYvzjv+zUyGMf4asKIBcPUag+B1QpaUCi5SmbyAtf3BNfy6uGQpYeEeczqiqi7x7RkoZkCre8oO9DBFntUiVRf6rxT7UqL43bBRCXG19sITOWkL0LBEP3F658KKAKDdW/BPqkMfw+U6KeLKe8NlctHKRSUZTbOTC9jEH8GoxUHkbSRRajoF5UtTJyD3frVKgMNnv68nxguA4ja0Sx6ZuOcRvrqof2//RJHb+cYXN77uos1DNUW4vAw" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "cb17a79c-9799-4130-877a-75066c9927e5",
      "name" : "hmac-generated",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "169a5502-6080-4c43-8a1a-c916457ead69" ],
        "secret" : [ "50On4n4JqeK-nqKCTNiDdlDoCu0F47mCNxpWZYbWycLuLLQ3HoXB22cLhMA40na5fJd77b20t5QP5PyjqEHOEQ" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS256" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "f5cddff3-939f-4912-8664-787f21bb2e39",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "b37cb432-283e-49cf-8f33-fe74e62ceb07",
    "alias" : "Authentication Options",
    "description" : "Authentication options.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "basic-auth",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "basic-auth-otp",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "ed237cfe-08c4-4d2f-b30d-b67bca04b6e3",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "32972139-5d82-49c8-b48f-8f357efde0ad",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "4c4de1cc-2b85-42bb-9c84-45d0b06651b8",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "db958215-e895-4b16-b141-daf2b1485888",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c1c4afe2-2f27-4adc-aedf-ccfddb9e27e4",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "48524514-05a2-4329-a75f-61c1fc943277",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a614bd6b-8f9b-48b3-a5d1-c4e70d394679",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d8d03d9e-5890-4264-a2ad-53d8adb54bef",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "73e0c420-ae7e-4234-a436-57a6928b195e",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "13da1d0f-0c26-41eb-9a8f-e7f0f7e4d506",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "3d2e0d02-a9b7-4306-8f9d-71c1fb5a1360",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "d2e700a2-53da-4b79-9c9a-cfa8d1d5e115",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f2ec3048-dc85-4cad-b270-95f9100a8cec",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "58a4de6f-6ca8-4d64-96d3-b6a46b4cc0ba",
    "alias" : "http challenge",
    "description" : "An authentication flow based on challenge-response HTTP Authentication Schemes",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "no-cookie-redirect",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Authentication Options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8d97c938-0ee2-4f73-a3e6-0003bf035135",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "85643e71-1314-45a6-ba54-c057defa2b58",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-profile-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "563aa1c8-ced7-4eab-9a11-47731d14fe60",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c26c14e8-5c1c-420f-988f-fe662409b100",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "ef07964a-3595-45e8-a027-b11b062ec3bf",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "29184840-1d40-4790-b514-3b4bc35e3042",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "terms_and_conditions",
    "name" : "Terms and Conditions",
    "providerId" : "terms_and_conditions",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "20.0.3",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}